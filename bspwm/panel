#!/bin/sh

[[ $(pgrep -cx panel) -gt 1 ]] && printf "%s\n" "The panel is already running!" >&2 && exit 1

. $HOME/.config/bspwm/color
. $HOME/.config/bspwm/network
. $HOME/.config/bspwm/clock
. $HOME/.config/bspwm/power
. $HOME/.config/bspwm/mixer

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT
pipe=$(mktemp -u)
mkfifo $pipe

bspc config top_padding 25

{ bspc subscribe report > $pipe; } &
{ xtitle -sf 'T%s'      > $pipe; } &
{ network               > $pipe; } &
{ clock                 > $pipe; } &
{ power                 > $pipe; } &
{ mixer                 > $pipe; } &

desktop_panel_link() {
  printf "%s" "%{A:bspc desktop -f ${1}:} ${1} %{A}"
}

num_monitors=$(bspc query -M | wc -l)

monitor_panel_item() {
  name=$1
  type=$2
  [[ $num_monitors -eq 1 ]] && return 0
  [[ $name == _ ]]          && return 0

  [[ $name == T ]] && name=
  [[ $name == B ]] && name=
  [[ $name == P ]] && name=mirroring

  [[ $type == m ]] && color=$COLOR_FOREGROUND
  [[ $type == M ]] && color=$COLOR_FOCUSED_FOREGROUND

  echo "%{F$color}%{B$COLOR_BACKGROUND}  ${name}  %{B-}%{F-}  "
}

desktop_panel_item() {
  name=$1
  type=$2

  [[ $name == _ ]] && return 0
  case $type in
    O)
      # focused occupied desktop
      echo "%{F$COLOR_FOCUSED_FOREGROUND}%{B$COLOR_FOCUSED_BACKGROUND}%{U$COLOR_FOREGROUND}%{+u} $(desktop_panel_link $name) %{-u}%{B-}%{F-}"
      ;;
    F)
      # focused free desktop
      echo "%{F$COLOR_FOCUSED_FOREGROUND}%{B$COLOR_FOCUSED_BACKGROUND}%{U$COLOR_FOREGROUND}%{+u} $(desktop_panel_link $name) %{-u}%{B-}%{F-}"
      ;;
    U)
      # focused urgent desktop
      echo "%{F$COLOR_URGENT_FOREGROUND}%{B$COLOR_URGENT_BACKGROUND}%{U$COLOR_URGENT_FOREGROUND}%{+u} $(desktop_panel_link $name) %{-u}%{B-}%{F-}"
      ;;
    o)
      # occupied desktop
      echo "%{F$COLOR_FOREGROUND}%{B$COLOR_BACKGROUND} $(desktop_panel_link $name) %{B-}%{F-}"
      ;;
    f)
      # free desktop
      echo "%{F$COLOR_EMPTY_FOREGROUND}%{B$COLOR_EMPTY_BACKGROUND} $(desktop_panel_link $name) %{B-}%{F-}"
      ;;
    u)
      # urgent desktop
      echo "%{F$COLOR_URGENT_FOREGROUND}%{B$COLOR_URGENT_BACKGROUND}%{U$COLOR_URGENT_FOREGROUND}%{+u} $(desktop_panel_link $name) %{-u}%{B-}%{F-}"
      ;;
  esac
}

bspwm_data=""
title_data=""
power_data=""
clock_data=""
mixer_data=""
network_data=""

while read line; do
  case $line in
    T*)
      title_data="%{F$COLOR_FOREGROUND}%{B$COLOR_BACKGROUND} ${line#?} %{B-}%{F-}"
      ;;
    N*)
      network_data="%{F$COLOR_FOREGROUND}%{B$COLOR_BACKGROUND} ${line#?} %{B-}%{F-}"
      ;;
    C*)
      clock_data="%{F$COLOR_FOREGROUND}%{B$COLOR_BACKGROUND} ${line#?} %{B-}%{F-}"
      ;;
    P*)
      power_data="%{F$COLOR_FOREGROUND}%{B$COLOR_BACKGROUND} ${line#?} %{B-}%{F-}"
      ;;
    V*)
      mixer_data="%{F$COLOR_FOREGROUND}%{B$COLOR_BACKGROUND} ${line#?} %{B-}%{F-}"
      ;;
    W*)
      IFS=':'
      bspwm_data=""

      set -- ${line#?}
      while [ $# -gt 0 ]; do
        item=$1

        case $item in
          [mM]*)
            bspwm_data="${bspwm_data}$(monitor_panel_item ${item#?} ${item:0:1})"
            ;;

          [OFUofu]*)
            bspwm_data="${bspwm_data}$(desktop_panel_item ${item#?} ${item:0:1})"
            ;;
        esac
        shift
      done
      ;;
  esac

  echo "%{l} ${bspwm_data}%{c}${title_data}%{r}${network_data} ${mixer_data} ${power_data} ${clock_data} "
done < $pipe | lemonbar -a 25 -g x25 -f "FontAwesome:size=10" -f "Hack:size=10" -F $COLOR_FOREGROUND -B $COLOR_BACKGROUND | sh

